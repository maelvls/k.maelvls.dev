rbac:
  enabled: true
accessLogs:
  enabled: true
ssl:
  enabled: true
  enforced: true

# https://docs.cert-manager.io/en/latest/tasks/issuing-certificates/ingress-shim.html#
dashboard:
  enabled: true
  # domain: traefik.k.maelvls.dev
  ingress:
    enabled: false
  #   annotations:
  #     kubernetes.io/ingress.class: traefik
  #     cert-manager.io/cluster-issuer: letsencrypt-prod
  #   tls:
  #     - hosts: [traefik.k.maelvls.dev]
  #       secretName: traefik-example-tls

kubernetes:
  # If kubernetes.namespaces isn't set, all namespaces are watched.
  namespaces: []
  ingressEndpoint:
    # Updates each Ingress Status.LoadBalancer.Ingress so that external-dns may
    # be able to add records based on the Ingress.Spec.Tls or Spec.Rules.Host or
    # the annotation external-dns.alpha.kubernetes.io/hostname.
    #
    # https://github.com/containous/traefik/issues/2173#issuecomment-434271161
    publishedService: "traefik/traefik"
# I use Google's Cloud DNS. As soon as the LoadBalancer has an external IP, I
# want to add a 'A' record to Cloud DNS.
# https://github.com/kubernetes-sigs/external-dns/blob/master/docs/tutorials/gke.md
#
# I can use that setting when I one a single A record that matches all
# subdomains like *.k.maelvls.dev.
#
# I do not use it since I want each Ingress to have its own A record.
# service:
#   annotations:
#     external-dns.alpha.kubernetes.io/hostname: "*.k.maelvls.dev"

# By default, the chart uses type: LoadBalancer, which creates a GCP Network
# Load Balancer which costs over â‚¬0.5 per day. Since my cluster does definitely
# not requires this, I'm just going to rely on a 80/443 NodePort.
# serviceType: NodePort
# service:
#   nodePorts:
#     http: 80
#     https: 443
# See
# https://github.com/kontena/akrobateo
# https://serverfault.com/questions/801189/expose-port-80-and-443-on-google-container-engine-without-load-balancer
