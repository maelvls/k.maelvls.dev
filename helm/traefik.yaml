rbac:
  enabled: true
accessLogs:
  enabled: true
ssl:
  enabled: true
  enforced: true

# Create an IngressRoute for the dashboard
ingressRoute:
  dashboard:
    enabled: true
    # Additional ingressRoute annotations (e.g. for kubernetes.io/ingress.class)
    annotations: {}

providers:
  kubernetesIngress:
    enabled: true
    publishedService:
      # Updates each Ingress Status.LoadBalancer.Ingress using the value
      # set in traefik/traefik's Service.Status.LoadBalancer. That's
      # because we need external-dns to be able to add records based on the
      # Ingress.Spec.Tls or Spec.Rules.Host or the annotation
      # external-dns.alpha.kubernetes.io/hostname.
      #
      # https://github.com/containous/traefik/issues/2173#issuecomment-434271161
      enabled: true
# I use Google's Cloud DNS. As soon as the LoadBalancer has an external IP, I
# want to add a 'A' record to Cloud DNS.
# https://github.com/kubernetes-sigs/external-dns/blob/master/docs/tutorials/gke.md
#
# I can use that setting when I one a single A record that matches all
# subdomains like *.k.maelvls.dev.
#
# I do not use it since I want each Ingress to have its own A record.
# service:
#   annotations:
#     external-dns.alpha.kubernetes.io/hostname: "*.k.maelvls.dev"

# By default, the chart uses type: LoadBalancer, which creates a GCP Network
# Load Balancer which costs over â‚¬0.5 per day. Since my cluster does definitely
# not requires this, I'm just going to rely on a 80/443 NodePort.
# serviceType: NodePort
# service:
#   nodePorts:
#     http: 80
#     https: 443
# See
# https://github.com/kontena/akrobateo
# https://serverfault.com/questions/801189/expose-port-80-and-443-on-google-container-engine-without-load-balancer

service:
  enabled: true
  type: LoadBalancer
